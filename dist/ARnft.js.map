{"version":3,"file":"ARnft.js","sources":["../src/core/renderers/CamerViewRenderer.ts","../src/ARnft.ts","../src/core/ARUtils.ts"],"sourcesContent":["\nexport interface VideoSettingData {\n    width: ScreenData;\n    height: ScreenData;\n    facingMode: string;\n}\n\nexport interface ScreenData {\n    min: number;\n    max: number;\n}\n\nexport interface ICameraViewRenderer {\n    getHeight(): number;\n    getWidth(): number;\n    getImage(): ImageData;\n}\n\nexport class CameraViewRenderer implements ICameraViewRenderer {\n\n    private canvas_process: HTMLCanvasElement;\n\n    private context_process: CanvasRenderingContext2D;\n\n    public video: HTMLVideoElement;\n\n    private _facing: string;\n\n    private vw: number;\n    private vh: number;\n\n    private w: number;\n    private h: number;\n\n    private pw: number;\n    private ph: number;\n\n    private ox: number;\n    private oy: number;\n\n    constructor(video: HTMLVideoElement) {\n        this.canvas_process = document.createElement('canvas');\n        this.context_process = this.canvas_process.getContext('2d');\n        this.video = video;\n    }\n\n    public getHeight(): number {\n        return this.vh;\n    }\n\n    public getWidth(): number {\n        return this.vw;\n    }\n\n    public getImage(): ImageData {\n        this.context_process.drawImage(this.video, 0, 0, this.vw, this.vh, this.ox, this.oy, this.w, this.h);\n        return this.context_process.getImageData(0, 0, this.pw, this.ph);\n    }\n\n    public initialize(videoSettings: VideoSettingData): Promise<boolean> {\n\n        this._facing = videoSettings.facingMode || 'environment'\n\n        const constraints = {}\n        const mediaDevicesConstraints = {}\n\n        return new Promise<boolean>(async (resolve, reject) => {\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                var hint: any = {\n                    \"audio\": false,\n                    \"video\": {\n                        facingMode: this._facing,\n                        width: { min: 480, max: 640 }\n                    }\n                };\n\n                navigator.mediaDevices.getUserMedia(hint).then(async (stream) => {\n                    this.video.srcObject = stream;\n                    this.video = await new Promise<HTMLVideoElement>((resolve, reject) => {\n                        this.video.onloadedmetadata = () => resolve(this.video);\n                    }).then((value) => {\n\n                        this.vw = this.video.videoWidth;\n                        this.vh = this.video.videoHeight;\n\n                        var pscale = 320 / Math.max(this.vw, this.vh / 3 * 4);\n\n                        this.w = this.vw * pscale;\n                        this.h = this.vh * pscale;\n                        this.pw = Math.max(this.w, (this.h / 3) * 4);\n                        this.ph = Math.max(this.h, (this.w / 4) * 3);\n                        this.ox = (this.pw - this.w) / 2;\n                        this.oy = (this.ph - this.h) / 2;\n\n                        this.canvas_process.width = this.pw;\n                        this.canvas_process.height = this.ph;\n\n                        this.context_process.fillStyle = 'black';\n                        this.context_process.fillRect(0, 0, this.pw, this.ph);\n                        resolve(true);\n                        return value;\n                    }).catch((msg) => {\n                        console.log(msg);\n                        reject(msg);\n                        return null;\n                    });\n                }).catch((error) => {\n                    console.error(error);\n                    reject(error);\n                });\n            }\n            else {\n                // reject(\"No navigator.mediaDevices && navigator.mediaDevices.getUserMedia\");\n                reject(\"Sorry, Your device does not support this experince.\");\n            }\n        });\n    }\n}","import { INFTEntity } from \"./core/NFTEntity\";\nimport { CameraViewRenderer } from \"./core/renderers/CamerViewRenderer\";\nimport { AppJson } from \"./core/data/AppData\";\nimport appdata from \"./core/data/appdata.json\";\nimport fs from 'fs';\nimport { getConfig } from \"./core/ARUtils\";\n\nexport class ARnft {\n\n    private count: number = 0;\n\n    private _controllers: Map<string, INFTEntity> = new Map<string, INFTEntity>();\n\n    private _videoRenderer: CameraViewRenderer;\n\n    private _cameraDataURL: string;\n\n    private _workerURL: string;\n\n    private _fps: number = 15;\n\n    private _lastTime: number = 0;\n\n    public appData: AppJson = appdata as AppJson;\n\n    // events\n    public static readonly EVENT_SET_CAMERA: string = \"ARNFT_SET_CAMERA_EVENT\";\n    public static readonly EVENT_FOUND_MARKER: string = \"ARNFT_FOUND_MARKER_EVENT\";\n    public static readonly EVENT_LOST_MARKER: string = \"ARNFT_LOST_MARKER_EVENT\";\n\n    constructor(video: CameraViewRenderer, camData: string, worker: string) {\n        this._videoRenderer = video;\n        this._cameraDataURL = camData;\n        this._workerURL = worker;\n        // set default fps at 15\n        this.setFPS(this._fps);\n    }\n\n    public addNFTEntity(entity: INFTEntity, name?: string): INFTEntity {\n\n        if (!name)\n            name = \"entity-\" + this.count++;\n\n        this._controllers.set(name, entity);\n        return entity;\n    }\n\n    public getEntityByName(name: string): INFTEntity {\n        if (!this._controllers.has(name))\n            return null;\n\n        return this._controllers.get(name);\n    }\n\n    public getCameraView(): CameraViewRenderer {\n        return this._videoRenderer;\n    }\n\n    public setFPS(value: number): void {\n        this._fps = 1000 / value;\n    }\n\n    public async init(configData: string, camData: string, workerURL: string): Promise<boolean> {\n      await getConfig(configData, this.appData);\n         this._videoRenderer = new CameraViewRenderer(document.getElementById(\"video\") as HTMLVideoElement);\n         await this._videoRenderer.initialize(this.appData.videoSettings).catch((error) => {\n             console.log(error);\n             return Promise.reject(false);\n         });\n      const arnft = new ARnft(this._videoRenderer, camData, workerURL);\n      await arnft.initialize().catch((error) => {\n        console.log(error);\n        return Promise.reject(false);\n      });\n      return true;\n\n    }\n\n    public initialize(): Promise<boolean> {\n        console.log(\"init ARnft\");\n\n        let promises: Promise<boolean>[] = [];\n        this._controllers.forEach(element => {\n            promises.push(element.initialize(this._workerURL, this._cameraDataURL));\n        });\n\n        return Promise.all(promises).then(() => {\n            return true;\n        });\n    }\n\n    public update(): void {\n        let time: number = Date.now();\n        let imageData: ImageData;\n        if ((time - this._lastTime) > this._fps) {\n            imageData = this._videoRenderer.getImage();\n            this._lastTime = time;\n        }\n\n        this._controllers.forEach(element => {\n            element.update();\n            if (imageData)\n                element.process(imageData);\n        });\n    }\n\n    public destroy(): void {\n        this._controllers.forEach(entity => {\n            entity.destroy();\n        });\n        this._controllers.clear();\n        this._videoRenderer = null;\n    }\n}\n","export function degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\nexport function isMobile(): boolean {\n    //return /Android|mobile|iPad|iPhone/i.test(navigator.userAgent)\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        // true for mobile device\n        return true;\n    }\n    return false;\n}\nexport function isIOS(): boolean {\n    if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n        // true for mobile device\n        return true;\n    }\n    return false;\n}\n\nexport function getConfig(configData: string, data: object): boolean {\n fetch(configData)\n  .then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error, status = \" + response.status);\n      }\n      return response.json();\n    })\n    .then((response) => {\n      data = response;\n    })\n    .catch(function(error) {\n        console.error(error);\n        return Promise.reject(false);\n      });\n  return true;\n}\n"],"names":["CameraViewRenderer","[object Object]","video","this","canvas_process","document","createElement","context_process","getContext","vh","vw","drawImage","ox","oy","w","h","getImageData","pw","ph","videoSettings","_facing","facingMode","Promise","async","resolve","reject","navigator","mediaDevices","getUserMedia","hint","audio","width","min","max","then","stream","srcObject","onloadedmetadata","value","videoWidth","videoHeight","pscale","Math","height","fillStyle","fillRect","catch","msg","console","log","error","ARnft","camData","worker","Map","appdata","_videoRenderer","_cameraDataURL","_workerURL","setFPS","_fps","entity","name","count","_controllers","set","has","get","configData","workerURL","data","fetch","response","ok","Error","status","json","getConfig","appData","getElementById","initialize","arnft","promises","forEach","element","push","all","imageData","time","Date","now","_lastTime","getImage","update","process","destroy","clear"],"mappings":"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"}